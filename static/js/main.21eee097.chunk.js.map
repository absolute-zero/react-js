{"version":3,"sources":["redux/dialogsReducer.js","components/Navbar/Navbar.module.css","components/common/Preloader.jsx","utils/obejectsHelpers.js","redux/usersReducer.js","assets/Spinner.gif","api/api.js","redux/sideBarReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Nav.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","index.js","components/common/FormsControls.js","utils/validators/validators.js","components/common/FormsControls.module.css","components/Header/header.module.css","components/Profile/MyPosts/MyPosts.module.css","redux/profileReducer.js"],"names":["initialState","dialogsData","id","name","messagesData","message","addMessage","newMessage","type","dialogsReducer","state","action","length","module","exports","Preloader","src","preloader","alt","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","response","follow","followUnfollowFlow","followUsers","bind","unfollow","unfollowUsers","apiMethod","actionCreator","resultCode","usersReducer","followed","concat","totalCount","filter","instance","axios","create","withCredentials","baseURL","headers","get","then","data","post","delete","authAPI","getLogin","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","friendName","sideBarReducer","isAuth","setAuthUserData","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sideBar","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","props","className","classes","nav","to","link","activeClassName","activeLink","nameLink","Header","header","arrow","dropList","onClick","HeaderContainer","this","React","Component","connect","maxLength30","maxLength","minLength3","minLength","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","style","formSummaryError","createField","required","Input","messages","stopSubmit","_error","formData","console","log","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","Nav","getState","path","fallback","withRouter","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","styles","formControl","undefined","Textarea","restProps","newPost","autoComplete","bar","placeholder","validators","component","text","validate","value","max","min","ADD_POST","posts","likeCount","profile","addPost","setStatus","newPostText","postId"],"mappings":"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","file":"static/js/main.21eee097.chunk.js","sourcesContent":["const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Aleksandr'},\r\n        {id: 2, name: 'Dashka'},\r\n        {id: 3, name: 'Alex'},\r\n        {id: 4, name: 'Timoha'},\r\n        {id: 5, name: 'Kirill'},\r\n        {id: 6, name: 'Tihon'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'What?'},\r\n        {id: 4, message: 'What is this?'},\r\n        {id: 5, message: 'Good night'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {\r\n                    id: state.messagesData.length,\r\n                    message: action.newMessage\r\n                }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessage= (newMessage) => ({type: ADD_MESSAGE, newMessage});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__28Ug1\",\"link\":\"Navbar_link__3lbpz\",\"nameLink\":\"Navbar_nameLink__21ev7\",\"activeLink\":\"Navbar_activeLink__1Zbo9\"};","import React from \"react\";\r\nimport preloader from \"../../assets/Spinner.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"\"/>\r\n        )\r\n}\r\n\r\nexport default Preloader;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/obejectsHelpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'users/FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 7,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: state.users.concat(action.users)\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage + 1}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: FOLLOWING_IN_PROGRESS, isFetching, userId});\r\n// export const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.followUsers.bind(userId), followSuccess)\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUsers.bind(userId), unfollowSuccess)\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (!response.resultCode) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/Spinner.dc50c71b.gif\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"886c1936-e61e-4e36-b11d-9b344d1c02a8\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 100) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)// currentPage -     pageSize -\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUsers(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUsers(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getLogin() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n","let initialState = {\r\n    friendName: [\r\n        {id: 1, name: 'Aleksandr'},\r\n        {id: 2, name: 'Dashka'},\r\n        {id: 3, name: 'Alex'},\r\n        {id: 4, name: 'Timoha'},\r\n        {id: 5, name: 'Kirill'},\r\n        {id: 6, name: 'Tihon'}\r\n    ]\r\n};\r\n\r\nconst sideBarReducer = (state= initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sideBarReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst TOGGLE_IS_FETCHING = 'auth/TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getLogin();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (!response.resultCode) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : `Some error`\r\n        dispatch(stopSubmit(`login`, {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\nexport default store;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n                <NavLink to='/profile' className={classes.link} activeClassName={classes.activeLink}>\r\n                    <i className='demoIcon demoIcon_white'>&#xf2be;</i>\r\n                    <span className={classes.nameLink}>Profile</span>\r\n                </NavLink>\r\n\r\n                <NavLink to='/friends' className={classes.link} activeClassName={classes.activeLink}>\r\n                    <i className='demoIcon demoIcon_white'>&#xe800;</i>\r\n                    <span className={classes.nameLink}>Users</span>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to='/dialogs' className={classes.link} activeClassName={classes.activeLink}>\r\n                    <i className='demoIcon demoIcon_white'>&#xf4ac;</i>\r\n                    <span className={classes.nameLink}>Message</span>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to='/news' className={classes.link} activeClassName={classes.activeLink}>\r\n                    <i className='demoIcon demoIcon_white'>&#xf1ea;</i>\r\n                    <span className={classes.nameLink}>News</span>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to='/music' className={classes.link} activeClassName={classes.activeLink}>\r\n                    <i className='demoIcon demoIcon_white'>&#xe801;</i>\r\n                    <span className={classes.nameLink}>Music</span>\r\n                </NavLink>\r\n\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink to='/setting' activeClassName={classes.activeLink}>Settings</NavLink>*/}\r\n            {/*</div>*/}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './header.module.css'\r\nimport cx from 'classnames'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={classes.header}>\r\n        <div className={classes.name}>\r\n            {\r\n                props.isAuth\r\n                ? props.login\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n            <div className={classes.arrow}/>\r\n            <div className={classes.dropList}>\r\n                <div>\r\n                    <NavLink to={'/setting'}>Setting</NavLink>\r\n                </div>\r\n                <div onClick={props.logout}>Logout</div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {/*<img src={user.photos.small != null ? user.photos.small : UserPhoto}*/}\r\n            {/*     className={styles.usersPhoto}/>*/}\r\n        </div>\r\n    </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleIsFetching, logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect (mapStateToProps, {toggleIsFetching, logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required} from \"../../utils/validators/validators\";\r\nimport {createField, Input} from \"../common/FormsControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls.module.css\"\r\n\r\nconst maxLength30 = maxLength(30);\r\nconst minLength3 = minLength(3)\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n        console.log(formData)\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={`/profile`}/>\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n            {\r\n                error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n\r\n            {createField('Email', 'email', [required, maxLength30, minLength3], Input)}\r\n            {createField('password', 'password', [required, maxLength30, minLength3], Input, {type: 'password'})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Nav\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'))\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar state={this.props.store.getState().sideBar}/>\r\n                <main className='app-wrapper-Content'>\r\n                    <Route path='/profile/:userId?'>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                            <ProfileContainer/>\r\n                        </Suspense>\r\n                    </Route>\r\n                    <Route path='/dialogs'>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                            <DialogsContainer/>\r\n                        </Suspense>\r\n                    </Route>\r\n                    <Route path='/friends'>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                            <UsersContainer/>\r\n                        </Suspense>\r\n                    </Route>\r\n                    <Route path='/news'>\r\n                        {/*<News />*/}\r\n                    </Route>\r\n                    <Route path='/music'>\r\n                        {/*<Music />*/}\r\n                    </Route>\r\n                    <Route path='/setting'>\r\n                        {/*<Setting />*/}\r\n                    </Route>\r\n                    <Route path='/login'>\r\n                        <Login/>\r\n                    </Route>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Post is cached for offline use.\" message.\n              console.log('Post is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App store={store}/>\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\nimport classes from \"../Profile/MyPosts/MyPosts.module.css\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div>\r\n            <div className={`${styles.formControl} ${hasError ? styles.error : undefined}`}>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...restProps} {...input}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...restProps} {...input} className={classes.newPost} autoComplete='off'/>\r\n            <span className={classes.bar}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field name={name} placeholder={placeholder}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\n\r\n// export const minPostLength = min => value =>\r\n//     value && value.length < min ?\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3ZCfC\",\"error\":\"FormsControls_error__2azU_\",\"formSummaryError\":\"FormsControls_formSummaryError__2VYED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"header_name__2PEEW\",\"header\":\"header_header__3fOW-\",\"dropList\":\"header_dropList__EjeiJ\",\"arrow\":\"header_arrow__3S0l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__30B1A\",\"posts\":\"MyPosts_posts__3EhEl\",\"border\":\"MyPosts_border__2iyI6\",\"form\":\"MyPosts_form__2i0eG\",\"newPost\":\"MyPosts_newPost__3d3r9\",\"bar\":\"MyPosts_bar__1TxBy\",\"button\":\"MyPosts_button__3z2WI\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'profile/UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 12},\r\n        {id: 2, message: 'It is my first project!', likeCount: 25}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    id: state.posts.length,\r\n                    message: action.newPost,\r\n                    likeCount: 0\r\n                }],\r\n                newPostText: '',\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPost) => ({type: ADD_POST, newPost})\r\nexport const updateNewPostText = (text) => ({type: UPDATE_NEW_POST_TEXT, text});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}