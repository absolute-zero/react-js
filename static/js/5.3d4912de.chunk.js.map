{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","type","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","alt","topImage","contacts","demoIcon","name","fullName","lookingForAJobDescription","info","infoElement","description","aboutMe","Preloader","Post","post","message","minLength1","maxLength","minLength","MyPosts","memo","postElement","posts","map","index","key","likeCount","postsBlock","border","AddPostFormRedux","onSubmit","values","newPost","addPost","reduxForm","form","handleSubmit","Field","component","Input","placeholder","validate","bar","button","width","height","MyPostsContainer","profilePage","newPostText","Profile","ProfileContainer","userId","match","params","logUserId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/5.3d4912de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login/' />\r\n\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Yk1h\",\"name\":\"ProfileInfo_name__35L2e\",\"status\":\"ProfileInfo_status__2uNqI\",\"contacts\":\"ProfileInfo_contacts__2Wojd\",\"topImage\":\"ProfileInfo_topImage__10slr\",\"info\":\"ProfileInfo_info__3ktXk\",\"infoElement\":\"ProfileInfo_infoElement__3HOS7\",\"description\":\"ProfileInfo_description__1OheN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2uciH\",\"post-info\":\"Post_post-info__2Trp4\"};","import React, {useEffect, useState} from \"react\";\r\n// import styles from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || `Change status`}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input type=\"text\" autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.descriptionBlock}>\r\n            <div>\r\n                <img src={props.profile.photos.large} alt=\"\" className={classes.topImage}/>\r\n                <div className={classes.contacts}>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf230;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xe802;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf189;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf099;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf16d;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf16a;</i>\r\n                    <i className={`demoIcon ${classes.demoIcon}`}>&#xf09b;</i>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={classes.name}>{props.profile.fullName}</div>\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <div className={classes.status}>{props.profile.lookingForAJobDescription}</div>\r\n                <div className={classes.info}>\r\n                    <div className={classes.infoElement}>\r\n                        <span>Professional skills:</span>\r\n                        <span className={classes.description}></span>\r\n                    </div>\r\n                    <div className={classes.infoElement}>\r\n                        <span>About me:</span>\r\n                        <span className={classes.description}>{props.profile.aboutMe}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes['post-info']}>\r\n                <img src=\"https://png.pngtree.com/png-clipart/20190906/original/pngtree-520-couple-avatar-boy-avatar-little-dinosaur-cartoon-cute-png-image_4561296.jpg\" alt=\"\"/>\r\n                {props.message}\r\n            </div>\r\n            {/*<div><span>like</span> {props.likeCount}</div>*/}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Icon24LogoVk from '@vkontakte/icons/dist/24/send';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required} from \"../../../utils/validators/validators\";\r\nimport {Input} from \"../../common/FormsControls\";\r\n\r\nconst maxLength15 = maxLength(15);\r\nconst minLength1 = minLength(1);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElement =\r\n        props.posts.map((post, index) => <Post key={index} message={post.message}\r\n                                               likeCount={post.likeCount}/>);\r\n\r\n    let addPost = (values) => {\r\n        if (values.newPost) props.addPost(values.newPost);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <div className={classes.border}>\r\n                <AddPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={`${classes.posts} ${classes.border}`}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form\r\n            className={classes.form}\r\n            onSubmit={props.handleSubmit}>\r\n            <Field component={Input} name={'newPost'} placeholder={'What is new with you'}\r\n                   className={classes.newPost}\r\n                   validate={[/*required,*/ minLength1]}\r\n            />\r\n            <span className={classes.bar}/>\r\n            <button className={classes.button}>\r\n                <Icon24LogoVk width={30} height={30}/>\r\n            </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPostForm'}) (AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, updateNewPostText} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status}\r\n                         updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.logUserId;\r\n            if (!userId) {\r\n                this.props.history.push(`/login`)\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    logUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}