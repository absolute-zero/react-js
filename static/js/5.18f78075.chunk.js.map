{"version":3,"sources":["../../../tmp/24/send.ts","../node_modules/svg-baker-runtime/browser-symbol.js","../node_modules/es6-object-assign/index.js","../../tmp/sprite.ts","../node_modules/svg-baker-runtime/browser-sprite.js","../../tmp/SvgIcon.tsx"],"names":["id","isMounted","mountIcon","addSpriteSymbol","BrowserSymbol","viewBox","content","Icon24Send","props","useIsomorphicLayoutEffect","SvgIcon","assign","width","isNaN","height","factory","SpriteSymbol","ref","this","createCommonjsModule","fn","module","exports","prototype","stringify","toString","destroy","this$1","forEach","prop","window","global","self","deepmerge","isMergeableObject","val","Object","call","cloneIfNecessary","value","optionsArgument","clone","Array","isArray","defaultArrayMerge","target","source","destination","slice","e","i","indexOf","push","array","arrayMerge","keys","key","mergeObject","all","length","Error","reduce","prev","next","namespaces_1","default","svg","name","uri","xlink","defaultAttrs","wrapInSvgString","attributes","attrs","map","attr","replace","join","objectToAttrsString","SpriteSymbol$$1","BrowserSpriteSymbol","apply","arguments","__proto__","create","constructor","prototypeAccessors","get","node","createFromExistingNode","getAttribute","outerHTML","unmount","mount","mountTarget","document","querySelector","render","appendChild","hasImportNode","importNode","doc","DOMParser","parseFromString","documentElement","parse","childNodes","parentNode","removeChild","defineProperties","firstSource","undefined","TypeError","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","symbol","browserSprite","canUseDOM","BrowserSprite","spriteNode","useLayoutEffect","useEffect","obj","svg$1","xlink$1","defaultConfig","style","Sprite","config","symbols","add","existing","find","remove","splice","filter","s","has","stringifiedSymbols","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayFrom","arrayLike","browser","test","navigator","userAgent","getUrlWithoutFragment","url","location","href","split","eventName","angular","run","$rootScope","$on","newUrl","oldUrl","data","event","createEvent","initCustomEvent","dispatchEvent","selector","querySelectorAll","insertBefore","xLinkNS","specialUrlCharsPattern","encoder","match","charCodeAt","toUpperCase","attList","attSelector","updateUrls","references","startsWith","replaceWith","startsWithEncoded","replaceWithEncoded","nodes","matcher","acc","arrayfied","matched","concat","selectAttributes","localName","RegExp","setAttributeNS","updateReferences","Events","Sprite$$1","cfg","emitter","on","type","handler","off","emit","evt","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","bind","addEventListener","symbolNode","updatedNodes","textContent","evalStylesIEWorkaround","detail","isNewSymbol","attach","sprite","removeEventListener","prepend","mountNode","usages","svgStyle","display","className","fill","getRootRef","restProps","size","Math","xlinkHref","color"],"mappings":"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","file":"static/js/5.18f78075.chunk.js","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 24 24';\nconst id = 'send_24';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"send_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\" /><path d=\"M5.739 15.754c-.686 1.855-1.117 3.158-1.293 3.91-.553 2.362-.956 2.894 1.107 1.771 2.062-1.122 12.046-6.683 14.274-7.919 2.904-1.611 2.942-1.485-.156-3.196-2.36-1.302-12.227-6.718-14.118-7.782-1.892-1.063-1.66-.59-1.107 1.772.178.761.616 2.076 1.311 3.944a4 4 0 002.988 2.531l5.765 1.117a.1.1 0 010 .196l-5.778 1.116a4 4 0 00-2.993 2.54z\" fill=\"currentColor\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon24SendProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon24Send: FC<Icon24SendProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24,\n  }));\n};\n\n(Icon24Send as any).mountIcon = mountIcon;\n\nexport default Icon24Send;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSpriteSymbol = factory());\n}(this, (function () { 'use strict';\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nreturn BrowserSpriteSymbol;\n\n})));\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","// @ts-ignore\nimport BrowserSprite from 'svg-baker-runtime/browser-sprite';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet browserSprite: BrowserSprite | null;\n\nif (canUseDOM) {\n  const spriteId = '__SVG_SPRITE_NODE__';\n\n  browserSprite = new BrowserSprite({ attrs: { id: spriteId } });\n\n  const mount = () => {\n    const spriteNode = document.getElementById(spriteId);\n    if (spriteNode) {\n      browserSprite.attach(spriteNode);\n    } else {\n      browserSprite.mount();\n    }\n  };\n\n  if (document.querySelector('body')) {\n    mount();\n  } else {\n    document.addEventListener('DOMContentLoaded', mount);\n  }\n} else {\n  browserSprite = null;\n}\n\nexport function addSpriteSymbol(symbol: any) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\n\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSprite = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),\n    'aria-hidden': 'true'\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar browser = {\n  isChrome: function () { return /chrome/i.test(navigator.userAgent); },\n  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },\n  isEdge: function () { return /edge/i.test(navigator.userAgent); }\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE() || browser.isEdge()) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nreturn BrowserSprite;\n\n})));\n","import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n\ninterface SvgIconProps extends HTMLAttributes<HTMLDivElement> {\n  width?: number;\n  height?: number;\n  viewBox?: string;\n  fill?: string;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst svgStyle = { display: 'block' };\n\nexport const SvgIcon: FC<SvgIconProps> = ({ width, height, viewBox, id, className, style, fill, getRootRef, ...restProps }) => {\n  const size = Math.max(width, height);\n\n  return (\n    <div\n      {...restProps}\n      ref={getRootRef}\n      className={`Icon Icon--${size} Icon--w-${width} Icon--h-${height} Icon--${id} ${className}`}\n      style={{ ...style, width, height }}\n    >\n      <svg viewBox={viewBox} width={width} height={height} style={svgStyle}>\n        <use xlinkHref={`#${id}`} style={{ fill: 'currentColor', color: fill }} />\n      </svg>\n    </div>\n  );\n};\n\nSvgIcon.defaultProps = {\n  className: '',\n  style: {},\n};\n"],"sourceRoot":""}